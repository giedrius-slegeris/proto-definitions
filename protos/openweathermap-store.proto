syntax = "proto3";

package openweathermap_store;
option go_package = "giedrius-slegeris/openweathermap-store;openweathermap_store";

message GetWeatherDataRequest {
  // Possibly add location to requests if extending server store to query for more locations
}

message Weather {
  int32 ID = 1;
  string Main = 2;
  string Description = 3;
  string Icon = 4;
}

message Current {
  int32 Dt = 1;
  int32 Sunrise = 2;
  int32 Sunset = 3;
  float Temp = 4;
  float FeelsLike = 5;
  int32 Pressure = 6;
  int32 Humidity = 7;
  float DewPoint = 8;
  float Uvi = 9;
  int32 Clouds = 10;
  int32 Visibility = 11;
  float WindSpeed = 12;
  int32 WindDeg = 13;
  float WindGust = 14;
  repeated Weather Weather = 15;
}

message GetWeatherDataResponse {
  int64 LastUpdated = 1;
  float Lat = 2;
  float Lon = 3;
  string Timezone = 4;
  int32 TimezoneOffset = 5;
  Current Current = 6;
}

service OpenWeatherMapStoreServer {
  rpc GetWeatherData(GetWeatherDataRequest) returns (GetWeatherDataResponse);
}