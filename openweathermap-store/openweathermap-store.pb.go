// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: protos/openweathermap-store.proto

package openweathermap_store

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetWeatherDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWeatherDataRequest) Reset() {
	*x = GetWeatherDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openweathermap_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeatherDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeatherDataRequest) ProtoMessage() {}

func (x *GetWeatherDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openweathermap_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeatherDataRequest.ProtoReflect.Descriptor instead.
func (*GetWeatherDataRequest) Descriptor() ([]byte, []int) {
	return file_protos_openweathermap_store_proto_rawDescGZIP(), []int{0}
}

type Weather struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Main        string `protobuf:"bytes,2,opt,name=Main,proto3" json:"Main,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Icon        string `protobuf:"bytes,4,opt,name=Icon,proto3" json:"Icon,omitempty"`
}

func (x *Weather) Reset() {
	*x = Weather{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openweathermap_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weather) ProtoMessage() {}

func (x *Weather) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openweathermap_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weather.ProtoReflect.Descriptor instead.
func (*Weather) Descriptor() ([]byte, []int) {
	return file_protos_openweathermap_store_proto_rawDescGZIP(), []int{1}
}

func (x *Weather) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Weather) GetMain() string {
	if x != nil {
		return x.Main
	}
	return ""
}

func (x *Weather) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Weather) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type Current struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dt         int32      `protobuf:"varint,1,opt,name=Dt,proto3" json:"Dt,omitempty"`
	Sunrise    int32      `protobuf:"varint,2,opt,name=Sunrise,proto3" json:"Sunrise,omitempty"`
	Sunset     int32      `protobuf:"varint,3,opt,name=Sunset,proto3" json:"Sunset,omitempty"`
	Temp       float32    `protobuf:"fixed32,4,opt,name=Temp,proto3" json:"Temp,omitempty"`
	FeelsLike  float32    `protobuf:"fixed32,5,opt,name=FeelsLike,proto3" json:"FeelsLike,omitempty"`
	Pressure   int32      `protobuf:"varint,6,opt,name=Pressure,proto3" json:"Pressure,omitempty"`
	Humidity   int32      `protobuf:"varint,7,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
	DewPoint   float32    `protobuf:"fixed32,8,opt,name=DewPoint,proto3" json:"DewPoint,omitempty"`
	Uvi        float32    `protobuf:"fixed32,9,opt,name=Uvi,proto3" json:"Uvi,omitempty"`
	Clouds     int32      `protobuf:"varint,10,opt,name=Clouds,proto3" json:"Clouds,omitempty"`
	Visibility int32      `protobuf:"varint,11,opt,name=Visibility,proto3" json:"Visibility,omitempty"`
	WindSpeed  float32    `protobuf:"fixed32,12,opt,name=WindSpeed,proto3" json:"WindSpeed,omitempty"`
	WindDeg    int32      `protobuf:"varint,13,opt,name=WindDeg,proto3" json:"WindDeg,omitempty"`
	WindGust   float32    `protobuf:"fixed32,14,opt,name=WindGust,proto3" json:"WindGust,omitempty"`
	Weather    []*Weather `protobuf:"bytes,15,rep,name=Weather,proto3" json:"Weather,omitempty"`
}

func (x *Current) Reset() {
	*x = Current{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openweathermap_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Current) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Current) ProtoMessage() {}

func (x *Current) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openweathermap_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Current.ProtoReflect.Descriptor instead.
func (*Current) Descriptor() ([]byte, []int) {
	return file_protos_openweathermap_store_proto_rawDescGZIP(), []int{2}
}

func (x *Current) GetDt() int32 {
	if x != nil {
		return x.Dt
	}
	return 0
}

func (x *Current) GetSunrise() int32 {
	if x != nil {
		return x.Sunrise
	}
	return 0
}

func (x *Current) GetSunset() int32 {
	if x != nil {
		return x.Sunset
	}
	return 0
}

func (x *Current) GetTemp() float32 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *Current) GetFeelsLike() float32 {
	if x != nil {
		return x.FeelsLike
	}
	return 0
}

func (x *Current) GetPressure() int32 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *Current) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *Current) GetDewPoint() float32 {
	if x != nil {
		return x.DewPoint
	}
	return 0
}

func (x *Current) GetUvi() float32 {
	if x != nil {
		return x.Uvi
	}
	return 0
}

func (x *Current) GetClouds() int32 {
	if x != nil {
		return x.Clouds
	}
	return 0
}

func (x *Current) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

func (x *Current) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *Current) GetWindDeg() int32 {
	if x != nil {
		return x.WindDeg
	}
	return 0
}

func (x *Current) GetWindGust() float32 {
	if x != nil {
		return x.WindGust
	}
	return 0
}

func (x *Current) GetWeather() []*Weather {
	if x != nil {
		return x.Weather
	}
	return nil
}

type GetWeatherDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdated    int64    `protobuf:"varint,1,opt,name=LastUpdated,proto3" json:"LastUpdated,omitempty"`
	Lat            float32  `protobuf:"fixed32,2,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Lon            float32  `protobuf:"fixed32,3,opt,name=Lon,proto3" json:"Lon,omitempty"`
	Timezone       string   `protobuf:"bytes,4,opt,name=Timezone,proto3" json:"Timezone,omitempty"`
	TimezoneOffset int32    `protobuf:"varint,5,opt,name=TimezoneOffset,proto3" json:"TimezoneOffset,omitempty"`
	Current        *Current `protobuf:"bytes,6,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *GetWeatherDataResponse) Reset() {
	*x = GetWeatherDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openweathermap_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeatherDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeatherDataResponse) ProtoMessage() {}

func (x *GetWeatherDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openweathermap_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeatherDataResponse.ProtoReflect.Descriptor instead.
func (*GetWeatherDataResponse) Descriptor() ([]byte, []int) {
	return file_protos_openweathermap_store_proto_rawDescGZIP(), []int{3}
}

func (x *GetWeatherDataResponse) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *GetWeatherDataResponse) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GetWeatherDataResponse) GetLon() float32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *GetWeatherDataResponse) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *GetWeatherDataResponse) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *GetWeatherDataResponse) GetCurrent() *Current {
	if x != nil {
		return x.Current
	}
	return nil
}

var File_protos_openweathermap_store_proto protoreflect.FileDescriptor

var file_protos_openweathermap_store_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x6d, 0x61, 0x70, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6f, 0x70, 0x65, 0x6e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x6d, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x63, 0x0a, 0x07, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x4d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x61, 0x69,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0xa8, 0x03, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x44, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x44, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x6e, 0x72, 0x69, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x75, 0x6e, 0x72, 0x69, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x75, 0x6e, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x65, 0x65,
	0x6c, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x46, 0x65,
	0x65, 0x6c, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x44, 0x65, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x76, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x55, 0x76, 0x69, 0x12, 0x16, 0x0a,
	0x06, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x57, 0x69, 0x6e, 0x64, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x67, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x57, 0x69, 0x6e, 0x64, 0x47, 0x75, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x57, 0x69, 0x6e, 0x64, 0x47, 0x75, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x07, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x22, 0xdb, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x4c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x4c, 0x61,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x4c, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x77,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x32, 0x88, 0x01, 0x0a, 0x19, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x4d, 0x61, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x6b,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x61,
	0x70, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x61, 0x70, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67,
	0x69, 0x65, 0x64, 0x72, 0x69, 0x75, 0x73, 0x2d, 0x73, 0x6c, 0x65, 0x67, 0x65, 0x72, 0x69, 0x73,
	0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x61, 0x70, 0x2d,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x3b, 0x6f, 0x70, 0x65, 0x6e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protos_openweathermap_store_proto_rawDescOnce sync.Once
	file_protos_openweathermap_store_proto_rawDescData = file_protos_openweathermap_store_proto_rawDesc
)

func file_protos_openweathermap_store_proto_rawDescGZIP() []byte {
	file_protos_openweathermap_store_proto_rawDescOnce.Do(func() {
		file_protos_openweathermap_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_openweathermap_store_proto_rawDescData)
	})
	return file_protos_openweathermap_store_proto_rawDescData
}

var file_protos_openweathermap_store_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protos_openweathermap_store_proto_goTypes = []any{
	(*GetWeatherDataRequest)(nil),  // 0: openweathermap_store.GetWeatherDataRequest
	(*Weather)(nil),                // 1: openweathermap_store.Weather
	(*Current)(nil),                // 2: openweathermap_store.Current
	(*GetWeatherDataResponse)(nil), // 3: openweathermap_store.GetWeatherDataResponse
}
var file_protos_openweathermap_store_proto_depIdxs = []int32{
	1, // 0: openweathermap_store.Current.Weather:type_name -> openweathermap_store.Weather
	2, // 1: openweathermap_store.GetWeatherDataResponse.Current:type_name -> openweathermap_store.Current
	0, // 2: openweathermap_store.OpenWeatherMapStoreServer.GetWeatherData:input_type -> openweathermap_store.GetWeatherDataRequest
	3, // 3: openweathermap_store.OpenWeatherMapStoreServer.GetWeatherData:output_type -> openweathermap_store.GetWeatherDataResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protos_openweathermap_store_proto_init() }
func file_protos_openweathermap_store_proto_init() {
	if File_protos_openweathermap_store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_openweathermap_store_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetWeatherDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_openweathermap_store_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Weather); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_openweathermap_store_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Current); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_openweathermap_store_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetWeatherDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_openweathermap_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_openweathermap_store_proto_goTypes,
		DependencyIndexes: file_protos_openweathermap_store_proto_depIdxs,
		MessageInfos:      file_protos_openweathermap_store_proto_msgTypes,
	}.Build()
	File_protos_openweathermap_store_proto = out.File
	file_protos_openweathermap_store_proto_rawDesc = nil
	file_protos_openweathermap_store_proto_goTypes = nil
	file_protos_openweathermap_store_proto_depIdxs = nil
}
